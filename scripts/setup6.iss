; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "ROM Properties Page Shell Extension"
#define MyAppVersion "2.6+"
#define MyAppPublisher "GerbilSoft"
#define MyAppURL "https://github.com/GerbilSoft/rom-properties"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{E39AEEA4-836C-4408-8A04-4456C9A23816}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
; NOTE: rom-properties doesn't actually change file associations, but it does register
; handlers for various types, so we need to tell Windows Explorer to refresh.
ChangesAssociations=yes
Compression=lzma2/max
DefaultDirName={autopf}\rom-properties
DefaultGroupName=ROM Properties
LicenseFile=..\LICENSE
PrivilegesRequired=admin
OutputBaseFilename=SetupRomProperties
SolidCompression=yes
WizardStyle=modern

; Enable 64-bit mode on amd64 and arm64.
ArchitecturesAllowed=x86compatible or x64compatible or arm64
ArchitecturesInstallIn64BitMode=x64compatible or arm64

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "arabic"; MessagesFile: "compiler:Languages\Arabic.isl"
Name: "french"; MessagesFile: "compiler:Languages\French.isl"
Name: "german"; MessagesFile: "compiler:Languages\German.isl"
Name: "italian"; MessagesFile: "compiler:Languages\Italian.isl"
Name: "portuguese"; MessagesFile: "compiler:Languages\Portuguese.isl"
Name: "russian"; MessagesFile: "compiler:Languages\Russian.isl"
Name: "spanish"; MessagesFile: "compiler:Languages\Spanish.isl"
Name: "ukrainian"; MessagesFile: "compiler:Languages\Ukrainian.isl"

[Components]
Name: "main"; Description: "Main Files"; Types: full compact custom; Flags: fixed
Name: "doc"; Description: "Documentation"; Types: full

[Code]

function InitializeSetup(): Boolean;
  var has_msvcrt_i386: Boolean;
  var has_msvcrt_amd64: Boolean;
  var has_msvcrt_arm64: Boolean;
begin
  Result := True

  { Check for the MSVC 2015-2022 runtime. }
  { FIXME: MsgBox() doesn't have clickable links... }
  has_msvcrt_i386 := IsMsiProductInstalled('{65E5BD06-6392-3027-8C26-853107D3CF1A}', PackVersionComponents(14, 0, 0, 0));
  has_msvcrt_amd64 := IsMsiProductInstalled('{36F68A90-239C-34DF-B58C-64B30153CE35}', PackVersionComponents(14, 0, 0, 0));
  has_msvcrt_arm64 := IsMsiProductInstalled('{DC9BAE42-810B-423A-9E25-E4073F1C7B00}', PackVersionComponents(14, 0, 0, 0));
  { TODO: Check 32-bit ARM? }
  if ProcessorArchitecture = paArm64 then
  begin
    { TODO: Do we need the 32-bit i386 version? }
    if not has_msvcrt_arm64 then
    begin
      MsgBox('The Microsoft C++ 2015-2022 runtime is missing.' + #13#10#13#10 +
        'Please install the arm64 version, available at:' + #13#10 +
        '• https://aka.ms/vs/17/release/vc_redist.arm64.exe', mbCriticalError, MB_OK)
      Result := False
      Exit;
    end;
  end
  else if ProcessorArchitecture = paX64 then
  begin
    if not has_msvcrt_i386 or not has_msvcrt_amd64 then
    begin
      MsgBox('The Microsoft C++ 2015-2022 runtime is missing.' + #13#10#13#10 +
        'Please install both the 32-bit and 64-bit versions, available at:' + #13#10 +
        '• https://aka.ms/vs/17/release/VC_redist.x86.exe' + #13#10 +
        '• https://aka.ms/vs/17/release/VC_redist.x64.exe', mbCriticalError, MB_OK)
      Result := False
      Exit;
    end;
  end
  else if ProcessorArchitecture = paX86 then
  begin
    if not has_msvcrt_i386 then
    begin
      MsgBox('The Microsoft C++ 2015-2022 runtime is missing.' + #13#10#13#10 +
        'Please install the 32-bit version, available at:' + #13#10 +
        '• https://aka.ms/vs/17/release/VC_redist.x86.exe', mbCriticalError, MB_OK)
      Result := False
      Exit;
    end;
  end;
end;

function ShouldInstallDll_i386(): Boolean;
begin
  case ProcessorArchitecture of
    paX86: Result := True;
    paX64: Result := True;
    { FIXME: Is this correct? (installing i386 DLLs on Windows for ARM) }
    paArm32: Result := True;
    paArm64: Result := True;
  else
    Result := False;
  end;
end;

function ShouldInstallDll_amd64(): Boolean;
begin
  case ProcessorArchitecture of
    paX64: Result := True;
  else
    Result := False;
  end;
end;

function ShouldInstallDll_arm(): Boolean;
begin
  case ProcessorArchitecture of
    paArm32: Result := True;
    paArm64: Result := True;
  else
    Result := False;
  end;
end;

function ShouldInstallDll_arm64(): Boolean;
begin
  case ProcessorArchitecture of
    paArm64: Result := True;
  else
    Result := False;
  end;
end;

function ShouldInstallDll_i386Only(): Boolean;
begin
  case ProcessorArchitecture of
    paX86: Result := True;
  else
    Result := False;
  end;
end;

function ShouldInstallDll_amd64Only(): Boolean;
begin
  case ProcessorArchitecture of
    paX64: Result := True;
  else
    Result := False;
  end;
end;

function ShouldInstallDll_armOnly(): Boolean;
begin
  case ProcessorArchitecture of
    paArm32: Result := True;
  else
    Result := False;
  end;
end;

function ShouldInstallDll_arm64Only(): Boolean;
begin
  case ProcessorArchitecture of
    paArm64: Result := True;
  else
    Result := False;
  end;
end;

[Files]
; InnoSetup must be run from the pkg_windows directory, as part of package.cmd.
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

Source: "..\pkg_windows\build.i386\bin\Release\fmt-12.dll"; DestDir: "{app}\i386"; Components: main; Flags: ignoreversion uninsrestartdelete 32bit; Check: ShouldInstallDll_i386
Source: "..\pkg_windows\build.i386\bin\Release\libgnuintl-8.dll"; DestDir: "{app}\i386"; Components: main; Flags: ignoreversion uninsrestartdelete 32bit; Check: ShouldInstallDll_i386
Source: "..\pkg_windows\build.i386\bin\Release\libpng16.dll"; DestDir: "{app}\i386"; Components: main; Flags: ignoreversion uninsrestartdelete 32bit; Check: ShouldInstallDll_i386
Source: "..\pkg_windows\build.i386\bin\Release\lz4.dll"; DestDir: "{app}\i386"; Components: main; Flags: ignoreversion uninsrestartdelete 32bit; Check: ShouldInstallDll_i386
Source: "..\pkg_windows\build.i386\bin\Release\minilzo.dll"; DestDir: "{app}\i386"; Components: main; Flags: ignoreversion uninsrestartdelete 32bit; Check: ShouldInstallDll_i386
Source: "..\pkg_windows\build.i386\bin\Release\minizip.dll"; DestDir: "{app}\i386"; Components: main; Flags: ignoreversion uninsrestartdelete 32bit; Check: ShouldInstallDll_i386
Source: "..\pkg_windows\build.i386\bin\Release\pugixml.dll"; DestDir: "{app}\i386"; Components: main; Flags: ignoreversion uninsrestartdelete 32bit; Check: ShouldInstallDll_i386
Source: "..\pkg_windows\build.i386\bin\Release\zlib1.dll"; DestDir: "{app}\i386"; Components: main; Flags: ignoreversion uninsrestartdelete 32bit; Check: ShouldInstallDll_i386
Source: "..\pkg_windows\build.i386\bin\Release\romdata-8.dll"; DestDir: "{app}\i386"; Components: main; Flags: ignoreversion uninsrestartdelete 32bit; Check: ShouldInstallDll_i386
Source: "..\pkg_windows\build.i386\bin\Release\rom-properties.dll"; DestDir: "{app}\i386"; Components: main; Flags: ignoreversion uninsrestartdelete 32bit regserver; Check: ShouldInstallDll_i386
Source: "..\pkg_windows\build.i386\bin\Release\rp-download.exe"; DestDir: "{app}\i386"; Components: main; Flags: ignoreversion 32bit; Check: ShouldInstallDll_i386

Source: "..\pkg_windows\build.amd64\bin\Release\fmt-12.dll"; DestDir: "{app}\amd64"; Components: main; Flags: ignoreversion uninsrestartdelete 64bit; Check: ShouldInstallDll_amd64
Source: "..\pkg_windows\build.amd64\bin\Release\libgnuintl-8.dll"; DestDir: "{app}\amd64"; Components: main; Flags: ignoreversion uninsrestartdelete 64bit; Check: ShouldInstallDll_amd64
Source: "..\pkg_windows\build.amd64\bin\Release\libpng16.dll"; DestDir: "{app}\amd64"; Components: main; Flags: ignoreversion uninsrestartdelete 64bit; Check: ShouldInstallDll_amd64
Source: "..\pkg_windows\build.amd64\bin\Release\lz4.dll"; DestDir: "{app}\amd64"; Components: main; Flags: ignoreversion uninsrestartdelete 64bit; Check: ShouldInstallDll_amd64
Source: "..\pkg_windows\build.amd64\bin\Release\minilzo.dll"; DestDir: "{app}\amd64"; Components: main; Flags: ignoreversion uninsrestartdelete 64bit; Check: ShouldInstallDll_amd64
Source: "..\pkg_windows\build.amd64\bin\Release\minizip.dll"; DestDir: "{app}\amd64"; Components: main; Flags: ignoreversion uninsrestartdelete 64bit; Check: ShouldInstallDll_amd64
Source: "..\pkg_windows\build.amd64\bin\Release\pugixml.dll"; DestDir: "{app}\amd64"; Components: main; Flags: ignoreversion uninsrestartdelete 64bit; Check: ShouldInstallDll_amd64
Source: "..\pkg_windows\build.amd64\bin\Release\zlib1.dll"; DestDir: "{app}\amd64"; Components: main; Flags: ignoreversion uninsrestartdelete 64bit; Check: ShouldInstallDll_amd64
Source: "..\pkg_windows\build.amd64\bin\Release\romdata-8.dll"; DestDir: "{app}\amd64"; Components: main; Flags: ignoreversion uninsrestartdelete 64bit; Check: ShouldInstallDll_amd64
Source: "..\pkg_windows\build.amd64\bin\Release\rom-properties.dll"; DestDir: "{app}\amd64"; Components: main; Flags: ignoreversion uninsrestartdelete 64bit regserver; Check: ShouldInstallDll_amd64
Source: "..\pkg_windows\build.amd64\bin\Release\rp-download.exe"; DestDir: "{app}\amd64"; Components: main; Flags: ignoreversion 64bit; Check: ShouldInstallDll_amd64

Source: "..\pkg_windows\build.arm\bin\Release\fmt-12.dll"; DestDir: "{app}\arm"; Components: main; Flags: ignoreversion uninsrestartdelete 32bit; Check: ShouldInstallDll_arm
; FIXME: Build libgnuintl-8.dll for Windows on ARM.
;Source: "..\pkg_windows\build.arm\bin\Release\libgnuintl-8.dll"; DestDir: "{app}\arm"; Components: main; Flags: ignoreversion uninsrestartdelete 32bit; Check: ShouldInstallDll_arm
Source: "..\pkg_windows\build.arm\bin\Release\libpng16.dll"; DestDir: "{app}\arm"; Components: main; Flags: ignoreversion uninsrestartdelete 32bit; Check: ShouldInstallDll_arm
Source: "..\pkg_windows\build.arm\bin\Release\lz4.dll"; DestDir: "{app}\arm"; Components: main; Flags: ignoreversion uninsrestartdelete 32bit; Check: ShouldInstallDll_arm
Source: "..\pkg_windows\build.arm\bin\Release\minilzo.dll"; DestDir: "{app}\arm"; Components: main; Flags: ignoreversion uninsrestartdelete 32bit; Check: ShouldInstallDll_arm
Source: "..\pkg_windows\build.arm\bin\Release\minizip.dll"; DestDir: "{app}\arm"; Components: main; Flags: ignoreversion uninsrestartdelete 32bit; Check: ShouldInstallDll_arm
Source: "..\pkg_windows\build.arm\bin\Release\pugixml.dll"; DestDir: "{app}\arm"; Components: main; Flags: ignoreversion uninsrestartdelete 32bit; Check: ShouldInstallDll_arm
Source: "..\pkg_windows\build.arm\bin\Release\zlib1.dll"; DestDir: "{app}\arm"; Components: main; Flags: ignoreversion uninsrestartdelete 32bit; Check: ShouldInstallDll_arm
Source: "..\pkg_windows\build.arm\bin\Release\romdata-8.dll"; DestDir: "{app}\arm"; Components: main; Flags: ignoreversion uninsrestartdelete 32bit; Check: ShouldInstallDll_arm
Source: "..\pkg_windows\build.arm\bin\Release\rom-properties.dll"; DestDir: "{app}\arm"; Components: main; Flags: ignoreversion uninsrestartdelete 32bit regserver; Check: ShouldInstallDll_arm
Source: "..\pkg_windows\build.arm\bin\Release\rp-download.exe"; DestDir: "{app}\arm"; Components: main; Flags: ignoreversion 32bit; Check: ShouldInstallDll_arm

Source: "..\pkg_windows\build.arm64\bin\Release\fmt-12.dll"; DestDir: "{app}\arm64"; Components: main; Flags: ignoreversion uninsrestartdelete 64bit; Check: ShouldInstallDll_arm64
; FIXME: Build libgnuintl-8.dll for Windows on ARM.
;Source: "..\pkg_windows\build.arm64\bin\Release\libgnuintl-8.dll"; DestDir: "{app}\arm64"; Components: main; Flags: ignoreversion uninsrestartdelete 64bit; Check: ShouldInstallDll_arm64
Source: "..\pkg_windows\build.arm64\bin\Release\libpng16.dll"; DestDir: "{app}\arm64"; Components: main; Flags: ignoreversion uninsrestartdelete 64bit; Check: ShouldInstallDll_arm64
Source: "..\pkg_windows\build.arm64\bin\Release\lz4.dll"; DestDir: "{app}\arm64"; Components: main; Flags: ignoreversion uninsrestartdelete 64bit; Check: ShouldInstallDll_arm64
Source: "..\pkg_windows\build.arm64\bin\Release\minilzo.dll"; DestDir: "{app}\arm64"; Components: main; Flags: ignoreversion uninsrestartdelete 64bit; Check: ShouldInstallDll_arm64
Source: "..\pkg_windows\build.arm64\bin\Release\minizip.dll"; DestDir: "{app}\arm64"; Components: main; Flags: ignoreversion uninsrestartdelete 64bit; Check: ShouldInstallDll_arm64
Source: "..\pkg_windows\build.arm64\bin\Release\pugixml.dll"; DestDir: "{app}\arm64"; Components: main; Flags: ignoreversion uninsrestartdelete 64bit; Check: ShouldInstallDll_arm64
Source: "..\pkg_windows\build.arm64\bin\Release\zlib1.dll"; DestDir: "{app}\arm64"; Components: main; Flags: ignoreversion uninsrestartdelete 64bit; Check: ShouldInstallDll_arm64
Source: "..\pkg_windows\build.arm64\bin\Release\romdata-8.dll"; DestDir: "{app}\arm64"; Components: main; Flags: ignoreversion uninsrestartdelete 64bit; Check: ShouldInstallDll_arm64
Source: "..\pkg_windows\build.arm64\bin\Release\rom-properties.dll"; DestDir: "{app}\arm64"; Components: main; Flags: ignoreversion uninsrestartdelete 64bit regserver; Check: ShouldInstallDll_arm64
Source: "..\pkg_windows\build.arm64\bin\Release\rp-download.exe"; DestDir: "{app}\arm64"; Components: main; Flags: ignoreversion 64bit; Check: ShouldInstallDll_arm64

Source: "..\pkg_windows\build.arm64ec\bin\Release\fmt-12.dll"; DestDir: "{app}\arm64ec"; Components: main; Flags: ignoreversion uninsrestartdelete 64bit; Check: ShouldInstallDll_arm64
; FIXME: Build libgnuintl-8.dll for Windows on ARM.
;Source: "..\pkg_windows\build.arm64ec\bin\Release\libgnuintl-8.dll"; DestDir: "{app}\arm64ec"; Components: main; Flags: ignoreversion uninsrestartdelete 64bit; Check: ShouldInstallDll_arm64
Source: "..\pkg_windows\build.arm64ec\bin\Release\libpng16.dll"; DestDir: "{app}\arm64ec"; Components: main; Flags: ignoreversion uninsrestartdelete 64bit; Check: ShouldInstallDll_arm64
Source: "..\pkg_windows\build.arm64ec\bin\Release\lz4.dll"; DestDir: "{app}\arm64ec"; Components: main; Flags: ignoreversion uninsrestartdelete 64bit; Check: ShouldInstallDll_arm64
Source: "..\pkg_windows\build.arm64ec\bin\Release\minilzo.dll"; DestDir: "{app}\arm64ec"; Components: main; Flags: ignoreversion uninsrestartdelete 64bit; Check: ShouldInstallDll_arm64
Source: "..\pkg_windows\build.arm64ec\bin\Release\minizip.dll"; DestDir: "{app}\arm64ec"; Components: main; Flags: ignoreversion uninsrestartdelete 64bit; Check: ShouldInstallDll_arm64
Source: "..\pkg_windows\build.arm64ec\bin\Release\pugixml.dll"; DestDir: "{app}\arm64ec"; Components: main; Flags: ignoreversion uninsrestartdelete 64bit; Check: ShouldInstallDll_arm64
Source: "..\pkg_windows\build.arm64ec\bin\Release\zlib1.dll"; DestDir: "{app}\arm64ec"; Components: main; Flags: ignoreversion uninsrestartdelete 64bit; Check: ShouldInstallDll_arm64
Source: "..\pkg_windows\build.arm64ec\bin\Release\romdata-8.dll"; DestDir: "{app}\arm64ec"; Components: main; Flags: ignoreversion uninsrestartdelete 64bit; Check: ShouldInstallDll_arm64
Source: "..\pkg_windows\build.arm64ec\bin\Release\rom-properties.dll"; DestDir: "{app}\arm64ec"; Components: main; Flags: ignoreversion uninsrestartdelete 64bit regserver; Check: ShouldInstallDll_arm64
Source: "..\pkg_windows\build.arm64ec\bin\Release\rp-download.exe"; DestDir: "{app}\arm64ec"; Components: main; Flags: ignoreversion 64bit; Check: ShouldInstallDll_arm64

; Install rpcli.exe and rp-config.exe in the root directory using the matching system architecture.
Source: "..\pkg_windows\build.i386\bin\Release\rpcli.exe"; DestDir: "{app}"; Components: main; Flags: ignoreversion; Check: ShouldInstallDll_i386Only
Source: "..\pkg_windows\build.amd64\bin\Release\rpcli.exe"; DestDir: "{app}"; Components: main; Flags: ignoreversion; Check: ShouldInstallDll_amd64
Source: "..\pkg_windows\build.arm\bin\Release\rpcli.exe"; DestDir: "{app}"; Components: main; Flags: ignoreversion; Check: ShouldInstallDll_armOnly
Source: "..\pkg_windows\build.arm64\bin\Release\rpcli.exe"; DestDir: "{app}"; Components: main; Flags: ignoreversion; Check: ShouldInstallDll_arm64Only

Source: "..\pkg_windows\build.i386\bin\Release\rp-config.exe"; DestDir: "{app}"; Components: main; Flags: ignoreversion; Check: ShouldInstallDll_i386Only
Source: "..\pkg_windows\build.amd64\bin\Release\rp-config.exe"; DestDir: "{app}"; Components: main; Flags: ignoreversion; Check: ShouldInstallDll_amd64Only
Source: "..\pkg_windows\build.arm\bin\Release\rp-config.exe"; DestDir: "{app}"; Components: main; Flags: ignoreversion; Check: ShouldInstallDll_armOnly
Source: "..\pkg_windows\build.arm64\bin\Release\rp-config.exe"; DestDir: "{app}"; Components: main; Flags: ignoreversion; Check: ShouldInstallDll_arm64Only

; Data files
Source: "..\pkg_windows\build.i386\bin\amiibo-data.bin"; DestDir: "{app}"; Components: main; Flags: ignoreversion

; Property Description Schemas
; TODO: Register the .propdesc file using PSRegisterPropertySchema().
Source: "..\src\win32\res\rom-properties.propdesc"; DestDir: "{app}"; Components: main; Flags: ignoreversion

; Documentation
Source: "..\doc\COMPILING.md"; DestDir: "{app}\doc"; Components: doc; Flags: ignoreversion
Source: "..\doc\keys.conf.example"; DestDir: "{app}\doc"; Components: doc; Flags: ignoreversion
Source: "..\doc\rom-properties.conf.example"; DestDir: "{app}\doc"; Components: main; Flags: ignoreversion
Source: "..\README.md"; DestDir: "{app}"; Components: doc; Flags: ignoreversion
Source: "..\NEWS.md"; DestDir: "{app}"; Components: doc; Flags: ignoreversion

; License (*always* installed)
Source: "..\LICENSE"; DestDir: "{app}"; Components: main; Flags: ignoreversion

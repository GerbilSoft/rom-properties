/***************************************************************************
 * ROM Properties Page shell extension.                                    *
 * config.libc.h.in: Common libc function detection. (source file)         *
 *                                                                         *
 * Copyright (c) 2016-2025 by David Korth.                                 *
 * SPDX-License-Identifier: GPL-2.0-or-later                               *
 ***************************************************************************/

#pragma once

// needed by compiler-compat.h
#define __ROMPROPERTIES_CONFIG_LIBC_H__ 1

/* Define to the size of `off_t` if it's available. */
#cmakedefine SIZEOF_OFF_T @OFF_T@

/* Define to the size of `off64_t` if it's available. */
#cmakedefine SIZEOF_OFF64_T @OFF64_T@

/* Define to 1 if you have the <dirent.h> header file. */
#cmakedefine HAVE_DIRENT_H 1

/* Define to 1 if you have the <sys/stat.h> header file. */
#cmakedefine HAVE_SYS_STAT_H 1

/** Time functions **/

/* Define to 1 if you have the `gmtime_r` function. */
#cmakedefine HAVE_GMTIME_R 1

/* Define to 1 if you have the `gmtime_s` function. */
#cmakedefine HAVE_GMTIME_S 1

/* Define to 1 if you have the `localtime_r' function. */
#cmakedefine HAVE_LOCALTIME_R 1

/* Define to 1 if you have the `localtime_s' function. */
#cmakedefine HAVE_LOCALTIME_S 1

/* Define to 1 if you have the `timegm' function. */
#cmakedefine HAVE_TIMEGM 1

/* Define to 1 if you have the `_mkgmtime' function. */
#cmakedefine HAVE__MKGMTIME 1

/* Define to 1 if you have the `_mkgmtime32' function. */
#cmakedefine HAVE__MKGMTIME32 1

/* Define to 1 if you have the `_mkgmtime64' function. */
#cmakedefine HAVE__MKGMTIME64 1

/** Aligned malloc() functions. **/

/* Define to 1 if you have the MSVC-specific `_aligned_malloc` function. */
#cmakedefine HAVE_MSVC_ALIGNED_MALLOC 1

/* Define to 1 if you have the `aligned_alloc` function. */
#cmakedefine HAVE_ALIGNED_ALLOC 1

/* Define to 1 if you have the `posix_memalign` function. */
#cmakedefine HAVE_POSIX_MEMALIGN 1

/* Define to 1 if you have the `memalign` function. */
#cmakedefine HAVE_MEMALIGN 1

/* Define to 1 if you have the <features.h> header file. */
#cmakedefine HAVE_FEATURES_H 1

// O_CLOEXEC support in fopen()
#if defined(__APPLE__)
// Mac OS X does not support the "e" mode character in fopen(),
// but it does have F_SETFD. (FD_CLOEXEC might not be defined, though.)
#  ifndef FD_CLOEXEC
#    define FD_CLOEXEC 1
#  endif /* !FD_CLOEXEC */
#elif defined(HAVE_FEATURES_H)
#  include <features.h>
#  if defined(__GLIBC__) && (__GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 7))
#    define HAVE_FOPEN_CLOEXEC 1
#    define FOPEN_CLOEXEC_FLAG "e"
#    define _TFOPEN_CLOEXEC_FLAG _T("e")
#  endif /* defined(__GLIBC__) && (__GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 7)) */
#endif /* HAVE_FEATURES_H */
#ifndef HAVE_FOPEN_CLOEXEC
#  define FOPEN_CLOEXEC_FLAG
#  define _TFOPEN_CLOEXEC_FLAG
#endif /* !HAVE_FOPEN_CLOEXEC */

/** C++ STL **/

/* Define to 1 if you have the `std::variant` class. */
#cmakedefine HAVE_STD_VARIANT 1
